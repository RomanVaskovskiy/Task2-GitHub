
JSON
 4. Создать внешний репозиторий c названием JSON.
	create a new ropository	

 5. Клонировать репозиторий JSON на локальный компьютер.
	Cod/Clone/ssh/git@github.com:RomanVaskovskiy/JSON.git
	
 6. Внутри локального JSON создать файл “new.json”.
	 touch "new.json"

 7. Добавить файл под гит.
	git status / git add "new.json"

 8. Закоммитить файл.
	git commit -m "add file json"

 9. Отправить файл на внешний GitHub репозиторий.
	git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
{
"person":{"name":"Roman","age":38}
},

"dog":null
"salary":800 
}

 11. Отправить изменения на внешний репозиторий.
	git add "new.json" / git push


 12. Создать файл preferences.json
	touch preferences.json


 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
		cat >>preferences.json
{                                                                               "favorite ovie":"fantomas",
"Favorite food":"Borshch",
"party would like to visit":"Malta" 
}


 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
	cat >>skills.json
 {
"skills":"Terminal", "GitHub"
}


 15. Отправить сразу 2 файла на внешний репозиторий.
	git add "preferences.json" "skills.json" / git commit / git push

 16. На веб интерфейсе создать файл bug_report.json.
	add fiel / create new file / bug_report.json


 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit changes	


 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
	"location": {
  "ancestorOrigins": {},
  "href": "http://localhost:4000/",
  "origin": "http://localhost:4000",
  "protocol": "http:",
  "host": "localhost:4000",
  "hostname": "localhost",
  "port": "4000",
  "pathname": "/",
  "search": "",
  "hash": ""
}

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit changes

 20. Синхронизировать внешний и локальный репозиторий JSON
	git pull

XML
 21. Создать внешний репозиторий c названием XML.
	create a new ropository	XML


 22. Клонировать репозиторий XML на локальный компьютер.
	git clone git@github.com:RomanVaskovskiy/XML.git

 23. Внутри локального XML создать файл “new.xml”.
	touch new.xml

 24. Добавить файл под гит.
	git add "new.xml"

 25. Закоммитить файл.
	git commit -m "add new.xml"

 26. Отправить файл на внешний GitHub репозиторий.
	git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
	 cat >>new.xml
<name>Roman</name>
<age>38</age>
<pets Null="true"/>
<800>

	
 28. Отправить изменения на внешний репозиторий.
	git add new.xml
	git commit -m "modifield new.xml"
	git push

 29. Создать файл preferences.xml
	touch preferences.xml
	
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
 	cat >>preferences.xml
<Любимый фильм>Fantomas</любимый фильм>
<любимая еда>борщ</любимая еда>
<страна куда поехать>Malta</страна куда поехать>

	
31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
	 cat >>sklls.xml
<skil>git bash</skill>
<skill>GitHHub</skill>


32. Сделать коммит в одну строку.
	git add preferences.xml sklls.xml
	git commit -m "add preferences.xml sklls.xml"

 33. Отправить сразу 2 файла на внешний репозиторий.
	git push

 34. На веб интерфейсе создать файл bug_report.xml.
	add file /create file/bug_report.xml

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	commit new file

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
	<bug>
  <developer>Roman Vaskovskiy</developer>
  <creation time>2022-06-04 18:15</creation time>
  <product>jdt</produkt>
  <component>UI</component>
  <resolution>fixed</resolution>
  <bug_severity>normal</bug_severity>
  <summary>[extract method] extracting return value results in compile error</summary>
  <descriptoin>Build ID: I20080617-2000 use extract method on 'foo' 
      class bar { 
        boolean foo;

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit new file

 38. Синхронизировать внешний и локальный репозиторий XML
	git fetch
	git pull



TXT
 1. Создать внешний репозиторий c названием TXT.
	create a new ropository
	
 2. Клонировать репозиторий TXT на локальный компьютер.
	git clone git@github.com:RomanVaskovskiy/TXT.git

 3. Внутри локального TXT создать файл “new.txt”.
	cd txt / touch new.txt

 4. Добавить файл под гит.
	git add new.txt	

 5. Закоммитить файл.
	 git commit -m "add file new.txt"

 6. Отправить файл на внешний GitHub репозиторий.
	git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
	cat >>new.txt
	Васьковський роман, 38 р.
	38 р
	тварин немає
	800 дол
 
 8. Отправить изменения на внешний репозиторий.
	 git add "new.txt"
	 git commit -m "new.txt"
	 git push

 9. Создать файл preferences.txt
	Touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
	cat >> preferences.txt
Любимый фильм - Fite clubриал                                                  
страна куда бы поехал - Мальта
Любимая еда - борщ
Любимое время года - весна 

11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
	Touch sklls.txt / cat >>sklls.txt
Git bush
GitHub


 12. Сделать коммит в одну строку.
	git add "preferences.txt sklls.txt"
	git commit -m "add preferences.txt sklls.txt"

 13. Отправить сразу 2 файла на внешний репозиторий.
	git push	

 14. На веб интерфейсе создать файл bug_report.txt.
	create file bug_report.txt
	
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit new file

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
	edit this file	

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit new file
	
 18. Синхронизировать внешний и локальный репозиторий TXT
	git fetch /git pull